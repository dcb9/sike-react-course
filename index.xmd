# Web 开发的未来 - React 全端训练营

## 暖身周

#overview
  [学员专用梯子指示](ss)

  这次训练营大家的背景都不太一样，后端，移动端，前端都有。许多同学使用过类似 Bootstrap 的框架来实现页面，但没有从零开始，自己做布局的经验。

  这周我们会一起完成一个包含滚动效果的营销页面：

  <video src="assets/scrollmagic-demo.mp4" controls></video>

  通过这个页面的实现，前端经验较为不足的同学们可以系统性地接触到前端开发的技巧，工具，和流程。我们的学习目标如下：

  + NPM 依赖管理。
  + 效应式设计的基本概念。
  + Flexbox 布局和绝对定位。
  + 如何用 CommonJS 模块化 JavaScript。

  这是一个针对 ReactNative 的 “非主流” 前端教程。我们不会介绍 block, inline-block, float 这些前端必备的知识。我们也不用任何前端框架。我们甚至使用了一个相当激进的 CSS 预设：

  ```[css]
  * {
    position: relative;
    display: flex;
    box-sizing: border-box;
    flex-direction: column;
  }
  ```

  这个预设和 ReactNative 的盒子模型一致，使用起来其实也可以避免不少坑。

  最后，纯粹为了好玩，我们会结合 ScrollMagic 和 GreenSock 动画库来做些效果。没时间或者没精力的话可以跳过.

  ## 第一周

  暖身周大家对 Flexbox 和 CommonJS 模块有了认识，这周我们会使用 React 来实现一个购物车：

  <img src="assets/shopping-cart.jpg"/>

  这周的学习目标如下：

  + 熟悉 React。
    + 如何组件化，props 和 state 的差别。
    + 如何处理事件。
    + 组件生命周期。
  + 练习 Flexbox 布局。
  + React 的函数式编程风格。
  + Flux 架构来实现 "one way data flow"。


#lesson[day=1 name=create-project project=ilovereact]
#lesson[day=2 name=responsive-design project=ilovereact]

  今天课程没有编程练习，只是单纯科普一下响应式设计的思路。觉得太闲的同学可以了解一下 GraphQL 和 Relay。他们分别解决两个不同的问题：

  1. GraphQL 服务取代服务器 API。
  2. Relay 取代客户端复杂的数据获取和绑定逻辑。

  这两项技术很多有趣的想法，但目前还不成熟，建议先观望。

  React 只是 View 层。加上 Flux，Relay，GraphQL 这些东西后的架构大概这样：

  <img src="assets/react-ecosystem.jpg"/>

  目前 GraphQL 和 Relay 的官方文档+例子都很渣。最好的学习资源是 ReactEurope 的视频。按下面这个顺序看：

  GraphQL 如何替代 REST API：

  [> Lee Byron - Exploring GraphQL][https://youtu.be/WQLzZf34FJ8]

  React 前端对接用 Relay：

  [> Joseph Savona - Relay][https://youtu.be/IrgHurBjQbg]

  GraphQL 只是 API，如何对接数据和内部服务：

  [> Creating a GraphQL Server][https://youtu.be/gY48GW87Feo]

#lesson[day=3 name=flexbox project=ilovereact]
#lesson[day=4 name=absolute-positioning project=ilovereact]
#lesson[day=5 name=modular-javascript project=ilovereact]
#lesson[day=6 name=scrollmagic project=ilovereact]

